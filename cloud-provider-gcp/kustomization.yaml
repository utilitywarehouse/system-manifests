apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

resources:
  - upstream.yaml

patches:
  - path: args-patch.yaml
  - path: image-patch.yaml
  - path: volume-patch.yaml
  # Deploy on control-plane nodes. Upstream sets this to null which makes
  # apiserver to moan. Also, we want to schedule pods there before waiting for
  # our labeller to mark the node as control-plane, thus we can use role=master
  - patch: |-
      - op: replace
        path: /spec/template/spec/nodeSelector
        value:
          role: "master"
    target:
      kind: DaemonSet
      name: cloud-controller-manager
      namespace: kube-system
  # Temporary - to be deleted after migration. Require the node to not be
  # marked as kube-controller-manager-mode=enable-leader-migration
  - patch: |-
      - op: add
        path: /spec/template/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecution/nodeSelectorTerms/0/matchExpressions/-
        value:
          key: kube-controller-manager-mode
          operator: NotIn
          values:
            - "enable-leader-migration"
    target:
      kind: DaemonSet
      name: cloud-controller-manager
      namespace: kube-system
  - patch: |-
      - op: add
        path: /spec/template/spec/affinity/nodeAffinity/requiredDuringSchedulingIgnoredDuringExecution/nodeSelectorTerms/1/matchExpressions/-
        value:
          key: kube-controller-manager-mode
          operator: NotIn
          values:
            - "enable-leader-migration"
    target:
      kind: DaemonSet
      name: cloud-controller-manager
      namespace: kube-system
  # Required during migration
  # https://kubernetes.io/docs/tasks/administer-cluster/controller-manager-leader-migration/#grant-access-to-migration-lease
  - patch: |-
      - op: add
        path: /rules/-
        value:
          apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          resourceNames:
          - cloud-provider-extraction-migration
          verbs:
          - create
          - list
          - get
          - update
    target:
      kind: Role
      name: system::leader-locking-cloud-controller-manager
      namespace: kube-system
  # Bind cloud-controller-manager to cloud-node-controller to be able to manage
  # nodes
  - patch: |-
      - op: add
        path: /subjects/-
        value:
          kind: ServiceAccount
          name: cloud-controller-manager
          namespace: kube-system
    target:
      kind: ClusterRoleBinding
      name: system:controller:cloud-node-controller

images:
  - name: cloud-controller-manager
    newName: registry.k8s.io/cloud-provider-gcp/cloud-controller-manager
    newTag: v26.2.4
