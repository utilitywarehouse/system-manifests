# https://main.kyverno.io/policies/argo/application-field-validation/application-field-validation/
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: argocd-application-field-validation
  annotations:
    policies.kyverno.io/title: Application Field Validation
    policies.kyverno.io/category: Argo
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Application
    kyverno.io/kyverno-version: 1.6.0
    policies.kyverno.io/minversion: 1.6.0
    kyverno.io/kubernetes-version: "1.23"
    policies.kyverno.io/description: >-
      This policy performs some best practices validation on Application fields.
      project name should not be empty.
      source.path should be specified and not the helm chart.
      destination.name or destination.server should be specified but never both.
      destination namespace should not be empty.
spec:
  validationFailureAction: enforce
  background: true
  rules:
    - name: empty-project
      match:
        any:
          - resources:
              kinds:
                - Application
      validate:
        message: >-
          `spec.project` should not be empty.
        pattern:
          spec:
            project: "?*"
    - name: empty-source-path
      match:
        any:
          - resources:
              kinds:
                - Application
      validate:
        message: >-
          `spec.source.path` should be specified
        pattern:
          spec:
            source:
              path: "?*"
    - name: chart-should-not-be-used
      match:
        any:
          - resources:
              kinds:
                - Application
      validate:
        message: >-
          `spec.source.chart` should not use helm chart.
        pattern:
          spec:
            source:
              X(chart):
    - name: destination-server-name
      match:
        any:
          - resources:
              kinds:
                - Application
      validate:
        message: >-
          `spec.destination.server` OR `spec.destination.name` should be specified but never both.
        anyPattern:
          - spec:
              destination:
                server: "?*"
                X(name):
          - spec:
              destination:
                X(server):
                name: "?*"
    - name: empty-destination-namespace
      match:
        any:
          - resources:
              kinds:
                - Application
      validate:
        message: >-
          `spec.destination.namespace` should not be empty.
        pattern:
          spec:
            destination:
              namespace: "?*"
