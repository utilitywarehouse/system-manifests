# This is overriding kafka server.properties to make sure we are:
# - Setting the authorizer class name to org.apache.kafka.metadata.authorizer.StandardAuthorizer
# - Setting super users for controllers and tf-applier
# - Using an empty ssl identification algorithm to avoid strict https matching
# - Enabling tls authentication everywhere
# In previous version we should have been able to patch all these as environment
# variables, but going this way proved ineffective.
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-controller-configuration
  namespace: "otel"
data:
  server.properties: |-
    # TLS auth
    ssl.client.auth=required
    ssl.endpoint.identification.algorithm=
    ssl.keystore.location=/opt/bitnami/kafka/config/certs/kafka.keystore.jks
    ssl.keystore.type=JKS
    ssl.truststore.location=/opt/bitnami/kafka/config/certs/kafka.truststore.jks
    ssl.truststore.type=JKS
    # per-listener auth
    listener.name.controller.ssl.client.auth=required
    listener.name.client.ssl.client.auth=required
    listener.name.internal.ssl.client.auth=required
    # Authorizer
    authorizer.class.name=org.apache.kafka.metadata.authorizer.StandardAuthorizer
    super.users=User:CN=kafka.otel.svc.cluster.local;User:CN=kafka-tf-applier
    # Network
    listener.security.protocol.map=CONTROLLER:SSL,CLIENT:SSL,INTERNAL:SSL
    listeners=CLIENT://:9092,INTERNAL://:9094,CONTROLLER://:9093
    advertised.listeners=CLIENT://advertised-address-placeholder:9092,INTERNAL://advertised-address-placeholder:9094,CONTROLLER://advertised-address-placeholder:9093
    controller.listener.names=CONTROLLER
    controller.quorum.bootstrap.servers=kafka-controller-0.kafka-controller-headless.otel.svc.cluster.local:9093,kafka-controller-1.kafka-controller-headless.otel.svc.cluster.local:9093,kafka-controller-2.kafka-controller-headless.otel.svc.cluster.local:9093
    # Roles
    process.roles=controller,broker
    inter.broker.listener.name=INTERNAL

